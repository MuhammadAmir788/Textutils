{"version":3,"sources":["Components/About.js","Components/Navebar.js","Components/Textform.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","React","createElement","className","class","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","data-bs-parent","Navebar","props","concat","mode","Link","to","title","aria-label","aria-current","onClick","toggleMode","role","htmlFor","TextForm","text","setText","useState","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","UCclick","newText","toUpperCase","showAlert","LCclick","toLowerCase","Clearclick","split","length","Alert","alert","msg","App","setMode","setAlert","message","setTimeout","Router","document","body","Routes","Route","exect","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.8130aeaf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n        <div className='container'>\r\n            <h2 className='my-3'>About Us</h2 >\r\n        <div class=\"accordion\" id=\"accordionExample\" >\r\n    <div class=\"accordion-item\">\r\n        <h2 class=\"accordion-header\">\r\n        <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n            Accordion Item #1\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n        <div class=\"accordion-body\">\r\n            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"accordion-item\">\r\n        <h2 class=\"accordion-header\">\r\n        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n            Accordion Item #2\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n        <div class=\"accordion-body\">\r\n            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"accordion-item\">\r\n        <h2 class=\"accordion-header\">\r\n        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n            Accordion Item #3\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseThree\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n        <div class=\"accordion-body\">\r\n            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <div className='container my-3' >\r\n    <button type=\"button\" class=\"btn btn-primary\">Enable Dark mode</button>\r\n    </div>\r\n        </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Navebar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/About\">\r\n                {props.About}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark ':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`${props.mode==='light'?'Enable Dark mode ':'Disable Dark mode'}`}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavebar.propTypes = { title: PropTypes.string, About: PropTypes.string };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const UCclick = () => {\r\n    // console.log('Uppercase was clicked'+ text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase\",\"success\");\r\n  };\r\n  const LCclick = () => {\r\n    // console.log('Uppercase was clicked'+ text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to LowerCase\",\"success\");\r\n  };\r\n  const Clearclick = () => {\r\n    // console.log('Uppercase was clicked'+ text);\r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert(\"Text has been cleared\",\"success\");\r\n  };\r\n  const UCchange = (event) => {\r\n    // console.log('on change');\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\" \");\r\n  // setText=('New text');\r\n  \r\n  return (\r\n    \r\n    <>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white ':'black'}}>\r\n        <h2> {props.heading}</h2>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          onChange={UCchange}\r\n          style={{backgroundColor:props.mode==='dark'?'grey ':'white',color:props.mode==='dark'?'white ':'black'}}\r\n          id=\"my box\"\r\n          rows=\"6\"\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1\" onClick={UCclick}>\r\n        Convert to Upper case\r\n      </button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={LCclick}>\r\n        Convert to Lower case\r\n      </button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={Clearclick}>\r\n        Clear Text\r\n      </button>\r\n      {/* <button className=\"btn btn-primary\">Reset</button>\r\n  <button className=\"btn btn-primary\">Save</button> */}\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white ':'black'}}>\r\n      <h2>Your text sumary</h2>\r\n      {/* word({text.split(\" \").length}words) and character({text.length}character) counter */}\r\n      <p>{text.split(\" \").length} Words and {text.length} Character</p> \r\n      <p>{0.008* text.split(\" \").length }Minutes to read</p> \r\n      <h2>Preview</h2> \r\n      <p>{text.length>0?text:\"Enter your text in above text area to preview\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n     props.alert && <div className={`alert alert-${props.alert.type} warning alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n    </div>\r\n            \r\n  )\r\n}\r\n","\nimport { useState } from \"react\";\nimport React from 'react'\nimport \"./App.css\";\nimport About from \"./Components/About\";\nimport Navebar from \"./Components/Navebar\";\nimport TextForm from \"./Components/Textform\";\nimport Alert from \"./Components/Alert\";\nimport {\n  BrowserRouter as Router,\n  \n  Route,\n  Routes,\n  // Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode,setMode] =useState('light');\n  const [alert,setAlert] =useState(null);\n  const showAlert =(message,type)=>{\n    setAlert({\n      msg: message,\n      type:type,\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = ()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='grey';\n      showAlert(\"Dark mode has been enabeld\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabeld\",\"success\");\n    }\n  }\n  return (\n    <>\n    <Router>\n      <Navebar title=\"TextUtils\" About=\"About Us\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n         <div className=\"container my-4\">\n         <Routes>\n          <Route exect path=\"/about\" element={<About />} />\n            \n          \n          \n          <Route exect path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the Text to analize\" mode={mode}></TextForm>\n}>\n\n          </Route>\n        </Routes>\n         </div>\n         </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}